// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.


//* -------------------------------------------------------------------------- */
// Font families
@mixin font-base {
    font-family: $font-stack-base;
}

@mixin font-mozilla {
    font-family: $font-stack-mozilla;
}

@mixin font-firefox {
    font-family: $font-stack-firefox;
}


//* -------------------------------------------------------------------------- */
// A mixin to output font-size in rems with a px fallback for old browsers.
// Declare sizes in pixels for ease and clarity, the mixin does the math.
// Requires: remify(), pixify() - defined in includes/functions.scss.
// Usage:
//  .foo { @include font-size(24px); }

@mixin font-size($size) {
    // When unit is pixels, pass it through and convert to rem
    @if (unit($size) == 'px') {
        font-size: $size;
        font-size: remify($size);
    }

    // When unit is not pixels, show an error
    @else {
        @error 'This mixin only accepts sizes in pixels. You declared `font-size(#{$size})`.';
    }
}


//* -------------------------------------------------------------------------- */
// Consistent font sizes. Avoid sizing text arbitrarily and use this
// set of predefined sizes. Sizes adapt at common breakpoints, and
// there's some redundancy at smaller sizes because we don't want things
// getting too tiny.
//
// Example usage:
//  .title { @include text-title-xl; }
//  .subtitle { @include text-title-lg; }
//  .intro { @include text-body-lg; }

@mixin text-title-2xl {
    @include font-size(type-scale('title-xl-size'));
    line-height: type-scale('title-xl-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-2xl-size'));
        line-height: type-scale('title-2xl-line-height');
    }
}

@mixin text-title-xl {
    @include font-size(type-scale('title-lg-size'));
    line-height: type-scale('title-lg-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-xl-size'));
        line-height: type-scale('title-xl-line-height');
    }
}

@mixin text-title-lg {
    @include font-size(type-scale('title-md-size'));
    line-height: type-scale('title-md-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-lg-size'));
        line-height: type-scale('title-lg-line-height');
    }
}

@mixin text-title-md {
    @include font-size(type-scale('title-sm-size'));
    line-height: type-scale('title-sm-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-md-size'));
        line-height: type-scale('title-md-line-height');
    }
}

@mixin text-title-sm {
    @include font-size(type-scale('title-xs-size'));
    line-height: type-scale('title-xs-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-sm-size'));
        line-height: type-scale('title-sm-line-height');
    }
}

@mixin text-title-xs {
    @include font-size(type-scale('title-2xs-size'));
    line-height: type-scale('title-2xs-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-xs-size'));
        line-height: type-scale('title-xs-line-height');
    }
}

@mixin text-title-2xs {
    @include font-size(type-scale('title-3xs-size'));
    line-height: type-scale('title-3xs-line-height');

    @media #{$mq-md} {
        @include font-size(type-scale('title-2xs-size'));
        line-height: type-scale('title-2xs-line-height');
    }
}

@mixin text-title-3xs {
    @include font-size(type-scale('title-3xs-size'));
    line-height: type-scale('title-3xs-line-height');
}


// body copy
@mixin text-body-xl {
    @include font-size(type-scale('body-xl-size'));
    line-height: type-scale('body-line-height');
}

@mixin text-body-lg {
    @include font-size(type-scale('body-lg-size'));
    line-height: type-scale('body-line-height');
}

@mixin text-body-md {
    @include font-size(type-scale('body-md-size'));
    line-height: type-scale('body-line-height');
}

@mixin text-body-sm {
    @include font-size(type-scale('body-sm-size'));
    line-height: type-scale('body-line-height');
}

@mixin text-body-xs {
    @include font-size(type-scale('body-xs-size'));
    line-height: type-scale('body-line-height');
}


// Aliases for backwards compatibility
$text-body-line-height: type-scale('body-line-height');
$text-title-line-height: type-scale('title-md-line-height');
$text-display-line-height: $text-title-line-height;
@mixin text-display-xxl { @include text-title-2xl; }
@mixin text-display-xl { @include text-title-xl; }
@mixin text-display-lg { @include text-title-lg; }
@mixin text-display-md { @include text-title-md; }
@mixin text-display-sm { @include text-title-sm; }
@mixin text-display-xs { @include text-title-xs; }
@mixin text-display-xxs { @include text-title-2xs; }
@mixin text-body-cta { @include text-body-md; }


