// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.


// Bidi / l10n
// - The bidi mixins are used to declare both the LTR and RTL values for
//   a property together and output appropriate declarations
// - This makes it easier to maintain the RTL version since you only have
//   to update values in one place.
// ======================================================================


//     @mixin bidi
//     accepts: a list of lists - each list must have 3 or 4 values
//     A list with three properties overrides the ltr value in rtl locales
//     @include bidi(((float, left, right),))
//     LTR: float: left;
//     RTL: float: right;
//     A list with four properties overrides the ltr value in rtl locales
//     AND provides a new rtl only property value
//     @include bidi(((margin-right, 10px, margin-left, 0),))
//     LTR: margin-right: 10px;
//     RTL: margin-right: 0;
//          margin-left: 10px;
//     Example input:
//     .test {
//         @include bidi((
//             (float, left, right),
//             (margin-right, ($grid-spacing / 2), margin-left, 0),
//         ));
//     }
//     Example output:
//     .test {
//         float: left;
//         margin-right: 10px;
//     }
//     [dir='rtl'] .test {
//         float: right;
//         margin-right: 0;
//         margin-left: 10px;
//     }


@mixin bidi($list) {
    & {
        @each $property, $ltr-value, $inverse-val-or-prop, $inverse-value in $list {
            @if type-of($ltr-value) == 'null' or type-of($inverse-val-or-prop) == 'null' {
                @warn $list; // I don't know why this won't output as part of the error
                @error 'Error processing @mixin bidi(), see previous warning for stack trace';

                // Trouble shooting:
                // - Check that you have the right number of nested (((parentheses)))
                // - Check that there is a trailing comma:
                //   @include bidi(((float, left, right),));

            }
            #{$property}: $ltr-value;
        }
    }

    [dir='rtl'] & {
        @each $property, $ltr-value, $inverse-val-or-prop, $inverse-value in $list {
            @if $inverse-value {
                #{$property}: $inverse-value;
                #{$inverse-val-or-prop}: $ltr-value;
            }
            @else {
                #{$property}: $inverse-val-or-prop;
            }
        }
    }
}
