// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@use 'sass:math';

@use '../tokens';
@use '../themes-sass' as themes;

// Clear floats
@mixin clearfix {
    zoom: 1;

    &::after {
        clear: both;
        content: '';
        display: block;
        height: 0;
        visibility: hidden;
    }
}

// Hide an element visually, but not from screen readers
@mixin visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;

    /* !important required to ensure element is hidden when mixin is applied */
    position: absolute !important; /* stylelint-disable-line declaration-no-important */
    width: 1px;
}

// Hide an element completely, including from screen readers
@mixin hidden {
    display: none;
}

// not the most up to date method, but works in IE7
@mixin image-replaced {
    direction: ltr;
    overflow: hidden;
    text-align: left;
    text-indent: -9999px;
    white-space: nowrap;
}

// Flip an element horizontally for RTL locales such as Arabic and Hebrew.
// Usually applied to pseudo-elements with a background-image, not for text.
@mixin flip-horizontally {
    transform: scale(-1, 1);
}

// Adds a right-pointing arrow after
@mixin trailing-arrow {
    &::after {
        content: '\00A0\25B8'; // space+triangle
        white-space: nowrap;
    }
}

// Adds a left-pointing arrow before
@mixin leading-arrow {
    &::before {
        content: '\25B8\00A0'; // triangle+space
        white-space: nowrap;
        transform: rotate(180deg);
    }
}

// Preserve aspect ratio to prevent content jumping when media loads.
// Apply to a direct parent element of an image or video.
@mixin aspect-ratio($width, $height, $width-wrapper: 100%) {
    padding-bottom: math.div($height, $width) * $width-wrapper;
    position: relative;

    img,
    video,
    iframe,
    object,
    embed {
        bottom: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
    }
}

// Light color links for dark backgrounds.
@mixin light-links {
    a:link {
        color: themes.$link-color-inverse;
    }

    a:visited {
        color: themes.$link-color-visited-inverse;
    }

    a:hover,
    a:focus,
    a:active {
        color: themes.$link-color-hover-inverse;
    }

    a:visited:hover,
    a:visited:focus,
    a:visited:active {
        color: themes.$link-color-visited-hover-inverse;
    }

    @supports (--css: variables) {
        a:link {
            color: var(--link-color-inverse);
        }

        a:visited {
            color: var(--link-color-visited-inverse);
        }

        a:hover,
        a:focus,
        a:active {
            color: var(--link-color-hover-inverse);
        }

        a:visited:hover,
        a:visited:focus,
        a:visited:active {
            color: var(--link-color-visited-hover-inverse);
        }
    }
}

// White color links for dark backgrounds, when link colors are undesirable.
@mixin white-links {
    a:link,
    a:visited {
        color: tokens.$color-white;

        &:hover,
        &:focus,
        &:active {
            color: tokens.$color-white;
        }
    }
}
