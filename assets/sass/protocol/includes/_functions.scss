// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@use 'sass:math';
@use 'sass:string';
@use 'sass:map';

// Convert pixel units to rems, assuming a 16px base size
// Usage:
//    remify(24px)

@function remify($pixels) {
    $rems: math.div($pixels, 16px);

    @return #{$rems}rem;
}

// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// Usage:
//    str-replace($string, ' ', '-')

@function str-replace($string, $search, $replace: '') {
    $index: string.index($string, $search);

    @if $index {
        @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
    }

    @return $string;
}

// Collect multiple maps into one big map.
// Sass' native map-merge() function only takes two maps. This function
// gets over that limitation by looping through numerous maps and merging
// them one at a time.
// Usage:
//    $mega-map: map-collect($map-1, $map-2, $map-3)

@function map-collect($maps...) {
    $collection: ();

    @each $map in $maps {
        $collection: map.merge($collection, $map);
    }

    @return $collection;
}



