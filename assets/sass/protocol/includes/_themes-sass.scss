// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// This file contains all the theme variables for both the Firefox and Mozilla
//  Mixins and functions can draw from these variable maps, swapping to
// a different map based on the value of the global $brand-theme variable.

@use 'sass:map';
@use 'tokens';
@use 'config';
@use 'functions';


// Default "theme" that will be served to legacy browsers -  IE 11 etc
$v-grid-xs: tokens.$layout-md;
$h-grid-xs: tokens.$layout-xs;
$v-grid-sm: tokens.$layout-md;
$h-grid-sm: tokens.$layout-xs;
$v-grid-md: tokens.$layout-md;
$h-grid-md: tokens.$layout-lg;
$v-grid-lg: tokens.$layout-md;
$h-grid-lg: tokens.$layout-lg;
$v-grid-xl: tokens.$layout-xl;
$h-grid-xl: 80px;

// fonts
$body-font-family: tokens.$font-stack-base;
$button-font-family: tokens.$font-stack-base;
$title-font-family: tokens.$font-stack-mozilla;

// colors
$background-color-tertiary-inverse: tokens.$color-dark-gray-40;
$background-color-tertiary: tokens.$color-light-gray-30;
$background-color-secondary-inverse: tokens.$color-dark-gray-60;
$background-color-secondary: tokens.$color-light-gray-10;
$background-color-inverse: tokens.$color-black;
$background-color: tokens.$color-white;
$body-text-color-secondary-inverse: tokens.$color-light-gray-30;
$body-text-color-secondary: tokens.$color-dark-gray-90;
$body-text-color-inverse: tokens.$color-white;
$body-text-color: tokens.$color-black;
$link-color-hover-inverse: tokens.$color-blue-05;
$link-color-hover: tokens.$color-link-hover;
$link-color-inverse: tokens.$color-blue-10;
$link-color-visited-hover-inverse: tokens.$color-violet-05;
$link-color-visited-hover: tokens.$color-link-hover;
$link-color-visited-inverse: tokens.$color-violet-10;
$link-color-visited: tokens.$color-link-visited;
$link-color: tokens.$color-link;
$title-text-color-inverse: tokens.$color-white;
$title-text-color: tokens.$color-black;

// type-scale
$title-2xl-size: 64px;
$title-2xl-line-height: 1.125;
$title-xl-size: 56px;
$title-xl-line-height: 1.143;
$title-lg-size: 48px;
$title-lg-line-height: 1.166;
$title-md-size: 40px;
$title-md-line-height: 1.1;
$title-sm-size: 32px;
$title-sm-line-height: 1.125;
$title-xs-size: 24px;
$title-xs-line-height: 1.166;
$title-2xs-size: 20px;
$title-2xs-line-height: 1.2;
$title-3xs-size: 16px;
$title-3xs-line-height: 1.25;
$body-xl-size: 21px;
$body-lg-size: 18px;
$body-md-size: 16px;
$body-sm-size: 14px;
$body-xs-size: 12px;
$body-line-height: 1.5;

// * -------------------------------------------------------------------------- */
// Vertical and Horizontal Spacing

$theme-spacing: (
    // xs
    v-grid-xs: tokens.$layout-md,
    h-grid-xs: tokens.$layout-xs,
    // sm is the same as xs
    v-grid-sm: tokens.$layout-md,
    h-grid-sm: tokens.$layout-xs,
    // md
    v-grid-md: tokens.$layout-md,
    h-grid-md: tokens.$layout-lg,
    // lg is the same as md
    v-grid-lg: tokens.$layout-md,
    h-grid-lg: tokens.$layout-lg,
    // xl
    v-grid-xl: tokens.$layout-xl,
    h-grid-xl: 80px,
);

// * -------------------------------------------------------------------------- */
// Fonts

$theme-fonts-firefox: (
    body-font-family: tokens.$font-stack-base,
    button-font-family: tokens.$font-stack-firefox,
    title-font-family: tokens.$font-stack-firefox,
);
$theme-fonts-mozilla: (
    body-font-family: tokens.$font-stack-base,
    button-font-family: tokens.$font-stack-base,
    title-font-family: tokens.$font-stack-mozilla,
);

// * -------------------------------------------------------------------------- */
// Colors

$theme-colors-firefox: (
    background-color-tertiary-inverse: tokens.$color-ink-20,
    background-color-tertiary: tokens.$color-marketing-gray-20,
    background-color-secondary-inverse: tokens.$color-ink-50,
    background-color-secondary: tokens.$color-light-gray-10,
    background-color-inverse: tokens.$color-ink-80,
    background-color: tokens.$color-white,
    body-text-color-secondary-inverse: tokens.$color-marketing-gray-30,
    body-text-color-secondary: tokens.$color-marketing-gray-70,
    body-text-color-inverse: tokens.$color-white,
    body-text-color: tokens.$color-marketing-gray-80,
    link-color-hover-inverse: tokens.$color-blue-05,
    link-color-hover: tokens.$color-link-hover,
    link-color-inverse: tokens.$color-blue-10,
    link-color-visited-hover-inverse: tokens.$color-violet-05,
    link-color-visited-hover: tokens.$color-link-hover,
    link-color-visited-inverse: tokens.$color-violet-10,
    link-color-visited: tokens.$color-link-visited,
    link-color: tokens.$color-link,
    title-text-color-inverse: tokens.$color-white,
    title-text-color: tokens.$color-marketing-gray-99,
);
$theme-colors-mozilla: (
    background-color-tertiary-inverse: tokens.$color-dark-gray-40,
    background-color-tertiary: tokens.$color-light-gray-30,
    background-color-secondary-inverse: tokens.$color-dark-gray-60,
    background-color-secondary: tokens.$color-light-gray-10,
    background-color-inverse: tokens.$color-black,
    background-color: tokens.$color-white,
    body-text-color-secondary-inverse: tokens.$color-light-gray-30,
    body-text-color-secondary: tokens.$color-dark-gray-90,
    body-text-color-inverse: tokens.$color-white,
    body-text-color: tokens.$color-black,
    link-color-hover-inverse: tokens.$color-blue-05,
    link-color-hover: tokens.$color-link-hover,
    link-color-inverse: tokens.$color-blue-10,
    link-color-visited-hover-inverse: tokens.$color-violet-05,
    link-color-visited-hover: tokens.$color-link-hover,
    link-color-visited-inverse: tokens.$color-violet-10,
    link-color-visited: tokens.$color-link-visited,
    link-color: tokens.$color-link,
    title-text-color-inverse: tokens.$color-white,
    title-text-color: tokens.$color-black,
);

// * -------------------------------------------------------------------------- */
// Type scale

// These values are used by the type-scale() function
// defined in includes/functions/_typography.scss

// Avoid referencing these values directly; Use the function.

$theme-type-scale-firefox: (
    title-2xl-size: 64px,
    title-2xl-line-height: 1.125,
    title-xl-size: 56px,
    title-xl-line-height: 1.143,
    title-lg-size: 48px,
    title-lg-line-height: 1.166,
    title-md-size: 40px,
    title-md-line-height: 1.1,
    title-sm-size: 32px,
    title-sm-line-height: 1.125,
    title-xs-size: 24px,
    title-xs-line-height: 1.166,
    title-2xs-size: 20px,
    title-2xs-line-height: 1.2,
    title-3xs-size: 16px,
    title-3xs-line-height: 1.25,
    body-xl-size: 21px,
    body-lg-size: 18px,
    body-md-size: 16px,
    body-sm-size: 14px,
    body-xs-size: 12px,
    body-line-height: 1.5,
);
$theme-type-scale-mozilla: (
    title-2xl-size: 76px,
    title-2xl-line-height: 1,
    title-xl-size: 66px,
    title-xl-line-height: 1,
    title-lg-size: 56px,
    title-lg-line-height: 1,
    title-md-size: 48px,
    title-md-line-height: 1,
    title-sm-size: 38px,
    title-sm-line-height: 1.05,
    title-xs-size: 28px,
    title-xs-line-height: 1.07,
    title-2xs-size: 24px,
    title-2xs-line-height: 1.08,
    title-3xs-size: 18px,
    title-3xs-line-height: 1.11,
    body-xl-size: 21px,
    body-lg-size: 18px,
    body-md-size: 16px,
    body-sm-size: 14px,
    body-xs-size: 12px,
    body-line-height: 1.5,
);

// * -------------------------------------------------------------------------- */
// Condensed Type scale

// This smaller scale is primarily intended for web apps.
// Use the standard type scale for marketing sites.

// The type-scale() function draws from this map to output
// different sizing based on the $type-scale variable.

// Avoid referencing these values directly.

$theme-type-scale-condensed-firefox: (
    title-2xl-size: 32px,
    title-2xl-line-height: 1.125,
    title-xl-size: 24px,
    title-xl-line-height: 1.166,
    title-lg-size: 21px,
    title-lg-line-height: 1.2,
    title-md-size: 18px,
    title-md-line-height: 1.2,
    title-sm-size: 16px,
    title-sm-line-height: 1.25,
    title-xs-size: 14px,
    title-xs-line-height: 1.25,
    title-2xs-size: 14px,
    title-2xs-line-height: 1.25,
    title-3xs-size: 14px,
    title-3xs-line-height: 1.25,
    body-xl-size: 18px,
    body-lg-size: 16px,
    body-md-size: 14px,
    body-sm-size: 12px,
    body-xs-size: 11px,
    body-line-height: 1.5,
);
$theme-type-scale-condensed-mozilla: (
    title-2xl-size: 34px,
    title-2xl-line-height: 1,
    title-xl-size: 26px,
    title-xl-line-height: 1,
    title-lg-size: 22px,
    title-lg-line-height: 1,
    title-md-size: 20px,
    title-md-line-height: 1,
    title-sm-size: 18px,
    title-sm-line-height: 1,
    title-xs-size: 16px,
    title-xs-line-height: 1,
    title-2xs-size: 14px,
    title-2xs-line-height: 1,
    title-3xs-size: 14px,
    title-3xs-line-height: 1,
    body-xl-size: 18px,
    body-lg-size: 16px,
    body-md-size: 14px,
    body-sm-size: 12px,
    body-xs-size: 11px,
    body-line-height: 1.5,
);

@function type-scale($scale) {
    // Default to Firefox brand scale
    $scale-map: $theme-type-scale-firefox;

    // Firefox condensed
    @if config.$type-scale == 'condensed' {
        $scale-map: $theme-type-scale-condensed-firefox;
    }

    // Switch to Mozilla brand scale
    @if config.$brand-theme == 'mozilla' {
        $scale-map: $theme-type-scale-mozilla;
    }

    // Mozilla condensed
    @if config.$brand-theme == 'mozilla' and config.$type-scale == 'condensed' {
        $scale-map: $theme-type-scale-condensed-mozilla;
    }

    @if not map.has-key($scale-map, $scale) {
        @error '`#{$scale}` is not a valid type scale variable name. ' + 'Valid variable names: #{map.keys($scale-map)}';
    }

    @return map.get($scale-map, $scale);
}

// Collect the maps for easier reference, so you don't have to refer to a specific submap.
// Usage:
//    map-get($theme-firefox, 'background-color-secondary');

$theme-firefox: functions.map-collect($theme-spacing, $theme-fonts-firefox, $theme-colors-firefox, $theme-type-scale-firefox);
$theme-mozilla: functions.map-collect($theme-spacing, $theme-fonts-mozilla, $theme-colors-mozilla, $theme-type-scale-mozilla);

// this can just be "get" and will import with theme- so we have theme-get and theme-type-scale
@function get-theme($var) {
    // Default to Firefox theme
    $theme-map: $theme-firefox;

    // Switch to Mozilla theme
    @if config.$brand-theme == 'mozilla' {
        $theme-map: $theme-mozilla;
    }

    @if not map.has-key($theme-map, $var) {
        @error '`#{$var}` is not a valid theme variable. ' + 'Valid theme variable names: #{map.keys($theme-map)}';
    }

    @return map.get($theme-map, $var);
}
